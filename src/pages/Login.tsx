import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import api from '../api/axios';
import type { AxiosError } from 'axios';
import camelcaseKeys from 'camelcase-keys';
import { useUser } from '../context/UserContext';
import type { User } from '../context/UserContext';

function Login() {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const { user, setUser } = useUser();
  const navigate = useNavigate();
  const [loginInProgress, setLoginInProgress] = useState(false); // ‚è≥ —Å—Ç–∞—Ç—É—Å –≤—Ö–æ–¥–∞

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    if (loginInProgress) {
      console.warn('üîÑ Login already in progress, please wait...');
      return; // –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—Ö–æ–¥, –µ—Å–ª–∏ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
    }
    setLoginInProgress(true); // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ —Å AxiosError
    try {
console.log('üîê Login handler triggered');
      const res = await api.post('/login', { email, password });
console.log('‚úÖ Login success, token:', res.data.token);

      sessionStorage.setItem('token', res.data.token); // —Ç–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ sessionStorage
      const profile = await api.get('/protected');   // interceptor –¥–æ–±–∞–≤–∏—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑ sessionStorage –≤ api/axios.ts
      const normalizedUser = camelcaseKeys(profile.data, { deep: true });
      setUser(normalizedUser as User);  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    } catch (err) {
      const error = err as AxiosError<{ message?: string }>;
      console.error('Login error:', error.response?.data || error.message);
      alert(error.response?.data?.message || 'Login failed. Please try again.');
    } finally {
      setLoginInProgress(false);
    }
  };

  // üëâ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
  useEffect(() => {
    if (user && user.isApproved && loginInProgress === false) {
      console.log('üéâ User profile:', user);
      navigate('/');
    }
  }, [user, loginInProgress, navigate]);

  return (
    <form onSubmit={handleLogin}>
      <h2>Login</h2>
      <label>
        Email:
        <input
          type="email"
          value={email}
          onChange={e => setEmail(e.target.value)}
          required
        />
      </label>
      <label>
        Password:
        <input
          type="password"
          value={password}
          onChange={e => setPassword(e.target.value)}
          required
        />
      </label>
      <button type="submit" disabled={loginInProgress}>
        {loginInProgress ? 'Logging in...' : 'Login'}
      </button>
    </form>
  );
};

export default Login;